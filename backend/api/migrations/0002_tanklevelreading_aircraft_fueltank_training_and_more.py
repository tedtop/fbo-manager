# Generated by Django 5.1.4 on 2025-10-29 22:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TankLevelReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tank_id', models.CharField(max_length=10, verbose_name='Tank ID')),
                ('level', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Level')),
                ('recorded_at', models.DateTimeField(verbose_name='Recorded At')),
                ('created_at', models.DateTimeField(verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Tank Level Reading',
                'verbose_name_plural': 'Tank Level Readings',
                'db_table': 'tank_level_readings',
                'ordering': ['-recorded_at'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Aircraft',
            fields=[
                ('tail_number', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='Tail Number')),
                ('aircraft_type', models.CharField(max_length=50, verbose_name='Aircraft Type')),
                ('airline_icao', models.CharField(blank=True, max_length=10, verbose_name='Airline ICAO')),
                ('fleet_id', models.CharField(blank=True, max_length=50, verbose_name='Fleet ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
            ],
            options={
                'verbose_name': 'Aircraft',
                'verbose_name_plural': 'Aircraft',
                'db_table': 'aircraft',
            },
        ),
        migrations.CreateModel(
            name='FuelTank',
            fields=[
                ('tank_id', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='Tank ID')),
                ('tank_name', models.CharField(max_length=100, verbose_name='Tank Name')),
                ('fuel_type', models.CharField(choices=[('jet_a', 'Jet A'), ('avgas', 'Avgas')], max_length=10, verbose_name='Fuel Type')),
                ('capacity_gallons', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Capacity (Gallons)')),
                ('min_level_inches', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Minimum Level (Inches)')),
                ('max_level_inches', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Maximum Level (Inches)')),
                ('usable_min_inches', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Usable Minimum (Inches)')),
                ('usable_max_inches', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Usable Maximum (Inches)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
            ],
            options={
                'verbose_name': 'Fuel Tank',
                'verbose_name_plural': 'Fuel Tanks',
                'db_table': 'fuel_tank',
            },
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_name', models.CharField(max_length=200, verbose_name='Training Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('validity_period_days', models.IntegerField(help_text='Number of days the training is valid', verbose_name='Validity Period (Days)')),
                ('aircraft_type', models.CharField(blank=True, help_text='Specific aircraft type (if applicable)', max_length=50, null=True, verbose_name='Aircraft Type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
            ],
            options={
                'verbose_name': 'Training',
                'verbose_name_plural': 'Trainings',
                'db_table': 'training',
            },
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'User', 'verbose_name_plural': 'Users'},
        ),
        migrations.AddField(
            model_name='user',
            name='employee_id',
            field=models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Employee ID'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_active_fueler',
            field=models.BooleanField(default=False, verbose_name='Is Active Fueler'),
        ),
        migrations.AddField(
            model_name='user',
            name='phone_number',
            field=models.CharField(blank=True, max_length=20, verbose_name='Phone Number'),
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('admin', 'Admin'), ('user', 'User')], default='user', max_length=10, verbose_name='Role'),
        ),
        migrations.AlterField(
            model_name='user',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='user',
            name='modified_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Modified At'),
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flight_number', models.CharField(max_length=20, verbose_name='Flight Number')),
                ('arrival_time', models.DateTimeField(blank=True, null=True, verbose_name='Arrival Time')),
                ('departure_time', models.DateTimeField(verbose_name='Departure Time')),
                ('flight_status', models.CharField(choices=[('scheduled', 'Scheduled'), ('arrived', 'Arrived'), ('departed', 'Departed'), ('cancelled', 'Cancelled'), ('delayed', 'Delayed')], default='scheduled', max_length=20, verbose_name='Flight Status')),
                ('destination', models.CharField(blank=True, max_length=100, verbose_name='Destination')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
                ('aircraft', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='flights', to='api.aircraft', verbose_name='Aircraft')),
            ],
            options={
                'verbose_name': 'Flight',
                'verbose_name_plural': 'Flights',
                'db_table': 'flight',
                'ordering': ['-departure_time'],
            },
        ),
        migrations.CreateModel(
            name='Fueler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fueler_name', models.CharField(max_length=100, verbose_name='Fueler Name')),
                ('handheld_name', models.CharField(blank=True, help_text='Name used on handheld devices', max_length=50, verbose_name='Handheld Name')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fueler_profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Fueler',
                'verbose_name_plural': 'Fuelers',
                'db_table': 'fueler',
            },
        ),
        migrations.CreateModel(
            name='FuelTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_number', models.CharField(max_length=50, unique=True, verbose_name='Ticket Number')),
                ('quantity_gallons', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Quantity (Gallons)')),
                ('quantity_lbs', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Quantity (Lbs)')),
                ('density', models.DecimalField(decimal_places=4, max_digits=6, verbose_name='Density')),
                ('progress', models.CharField(choices=[('started', 'Started'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='started', max_length=20, verbose_name='Progress')),
                ('charge_flags', models.JSONField(blank=True, default=dict, verbose_name='Charge Flags')),
                ('assigned_at', models.DateTimeField(blank=True, null=True, verbose_name='Assigned At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('qt_dispatch_id', models.CharField(blank=True, help_text='QT Technologies API dispatch ID', max_length=100, null=True, verbose_name='QT Dispatch ID')),
                ('qt_sync_status', models.CharField(choices=[('pending', 'Pending'), ('synced', 'Synced'), ('failed', 'Failed')], default='pending', max_length=20, verbose_name='QT Sync Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
                ('flight', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fuel_transactions', to='api.flight', verbose_name='Flight')),
            ],
            options={
                'verbose_name': 'Fuel Transaction',
                'verbose_name_plural': 'Fuel Transactions',
                'db_table': 'fuel_transaction',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TerminalGate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('terminal_id', models.CharField(max_length=20, verbose_name='Terminal ID')),
                ('terminal_num', models.CharField(max_length=10, verbose_name='Terminal Number')),
                ('gate_number', models.CharField(max_length=10, verbose_name='Gate Number')),
                ('location_id', models.CharField(blank=True, max_length=50, verbose_name='Location ID')),
                ('display_order', models.IntegerField(default=0, verbose_name='Display Order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
            ],
            options={
                'verbose_name': 'Terminal Gate',
                'verbose_name_plural': 'Terminal Gates',
                'db_table': 'terminal_gate',
                'ordering': ['display_order', 'terminal_num', 'gate_number'],
                'unique_together': {('terminal_num', 'gate_number')},
            },
        ),
        migrations.CreateModel(
            name='ParkingLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=100, unique=True, verbose_name='Location Name')),
                ('location_type', models.CharField(choices=[('hangar', 'Hangar'), ('terminal', 'Terminal'), ('ramp', 'Ramp'), ('tiedown', 'Tie-Down'), ('other', 'Other')], max_length=50, verbose_name='Location Type')),
                ('display_order', models.IntegerField(default=0, verbose_name='Display Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
            ],
            options={
                'verbose_name': 'Parking Location',
                'verbose_name_plural': 'Parking Locations',
                'db_table': 'parking_location',
                'ordering': ['display_order', 'location_name'],
            },
        ),
        migrations.AddField(
            model_name='flight',
            name='gate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='flights', to='api.terminalgate', verbose_name='Gate'),
        ),
        migrations.AddField(
            model_name='flight',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='flights', to='api.parkinglocation', verbose_name='Parking Location', db_column='location_id'),
        ),
        migrations.CreateModel(
            name='FuelerAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='Assigned At')),
                ('fueler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='api.fueler', verbose_name='Fueler')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fueler_assignments', to='api.fueltransaction', verbose_name='Transaction')),
            ],
            options={
                'verbose_name': 'Fueler Assignment',
                'verbose_name_plural': 'Fueler Assignments',
                'db_table': 'fueler_assignment',
                'ordering': ['-assigned_at'],
                'unique_together': {('transaction', 'fueler')},
            },
        ),
        migrations.CreateModel(
            name='FuelerTraining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed_date', models.DateField(verbose_name='Completed Date')),
                ('expiry_date', models.DateField(verbose_name='Expiry Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
                ('certified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='certifications_issued', to=settings.AUTH_USER_MODEL, verbose_name='Certified By')),
                ('fueler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='api.fueler', verbose_name='Fueler')),
                ('training', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='api.training', verbose_name='Training')),
            ],
            options={
                'verbose_name': 'Fueler Training',
                'verbose_name_plural': 'Fueler Trainings',
                'db_table': 'fueler_training',
                'ordering': ['-expiry_date'],
                'unique_together': {('fueler', 'training')},
            },
        ),
    ]
