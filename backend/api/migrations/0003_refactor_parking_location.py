# Generated by Django 5.1.4 on 2025-10-31 10:54

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ("api", "0002_tanklevelreading_aircraft_fueltank_training_and_more"),
    ]

    operations = [
        # Use raw SQL to refactor parking_location table
        migrations.RunSQL(
            sql="""
            -- Add new columns (location_code without UNIQUE constraint initially)
            ALTER TABLE parking_location ADD COLUMN IF NOT EXISTS location_code VARCHAR(50);
            ALTER TABLE parking_location ADD COLUMN IF NOT EXISTS description TEXT DEFAULT '';
            ALTER TABLE parking_location ADD COLUMN IF NOT EXISTS latitude DECIMAL(9, 6);
            ALTER TABLE parking_location ADD COLUMN IF NOT EXISTS longitude DECIMAL(9, 6);
            ALTER TABLE parking_location ADD COLUMN IF NOT EXISTS polygon JSONB;
            ALTER TABLE parking_location ADD COLUMN IF NOT EXISTS airport VARCHAR(10) DEFAULT 'MSO';
            ALTER TABLE parking_location ADD COLUMN IF NOT EXISTS terminal VARCHAR(50);
            ALTER TABLE parking_location ADD COLUMN IF NOT EXISTS gate VARCHAR(10);

            -- Migrate existing data: create location_code from location_name
            UPDATE parking_location
            SET location_code = UPPER(REPLACE(location_name, ' ', '-'))
            WHERE location_code IS NULL;

            -- Copy location_name to description
            UPDATE parking_location
            SET description = COALESCE(notes, '')
            WHERE description = '';

            -- Set display_order based on is_active (active = 10, inactive = 0)
            UPDATE parking_location
            SET display_order = CASE WHEN is_active THEN 10 ELSE 0 END
            WHERE display_order = 0;

            -- Now add NOT NULL and UNIQUE constraints to location_code
            ALTER TABLE parking_location ALTER COLUMN location_code SET NOT NULL;
            ALTER TABLE parking_location ADD CONSTRAINT parking_location_location_code_key UNIQUE (location_code);

            -- Remove old columns
            ALTER TABLE parking_location DROP COLUMN IF EXISTS location_name;
            ALTER TABLE parking_location DROP COLUMN IF EXISTS location_type;
            ALTER TABLE parking_location DROP COLUMN IF EXISTS is_active;
            ALTER TABLE parking_location DROP COLUMN IF EXISTS notes;

            -- Create indexes
            CREATE INDEX IF NOT EXISTS api_parking_airport_idx ON parking_location(airport, display_order);
            CREATE INDEX IF NOT EXISTS api_parking_location_idx ON parking_location(location_code);
            """,
            reverse_sql="""
            -- Reverse migration
            ALTER TABLE parking_location DROP COLUMN IF EXISTS location_code;
            ALTER TABLE parking_location DROP COLUMN IF EXISTS description;
            ALTER TABLE parking_location DROP COLUMN IF EXISTS latitude;
            ALTER TABLE parking_location DROP COLUMN IF EXISTS longitude;
            ALTER TABLE parking_location DROP COLUMN IF EXISTS polygon;
            ALTER TABLE parking_location DROP COLUMN IF EXISTS airport;
            ALTER TABLE parking_location DROP COLUMN IF EXISTS terminal;
            ALTER TABLE parking_location DROP COLUMN IF EXISTS gate;

            -- Restore old columns
            ALTER TABLE parking_location ADD COLUMN location_name VARCHAR(100) UNIQUE;
            ALTER TABLE parking_location ADD COLUMN location_type VARCHAR(50);
            ALTER TABLE parking_location ADD COLUMN is_active BOOLEAN DEFAULT TRUE;
            ALTER TABLE parking_location ADD COLUMN notes TEXT;

            DROP INDEX IF EXISTS api_parking_airport_idx;
            DROP INDEX IF EXISTS api_parking_location_idx;
            """,
        ),
    ]
